// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MitochondrialRegionCoverageTrack with dataset exac has no unexpected changes 1`] = `
<div
  className="StatusMessage-sc-neg7mh-0 hJFlwG"
>
  Mitochondrial genome coverage is not available in 
  ExAC v1.0
</div>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_r2_1 has no unexpected changes 1`] = `
<div
  className="StatusMessage-sc-neg7mh-0 hJFlwG"
>
  Mitochondrial genome coverage is not available in 
  gnomAD v2.1.1
</div>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_r2_1_controls has no unexpected changes 1`] = `
<div
  className="StatusMessage-sc-neg7mh-0 hJFlwG"
>
  Mitochondrial genome coverage is not available in 
  gnomAD v2.1.1 (controls)
</div>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_r2_1_non_cancer has no unexpected changes 1`] = `
<div
  className="StatusMessage-sc-neg7mh-0 hJFlwG"
>
  Mitochondrial genome coverage is not available in 
  gnomAD v2.1.1 (non-cancer)
</div>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_r2_1_non_neuro has no unexpected changes 1`] = `
<div
  className="StatusMessage-sc-neg7mh-0 hJFlwG"
>
  Mitochondrial genome coverage is not available in 
  gnomAD v2.1.1 (non-neuro)
</div>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_r2_1_non_topmed has no unexpected changes 1`] = `
<div
  className="StatusMessage-sc-neg7mh-0 hJFlwG"
>
  Mitochondrial genome coverage is not available in 
  gnomAD v2.1.1 (non-TOPMed)
</div>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_r3 queries with appropriate params 1`] = `
<mockConstructor
  errorMessage="Unable to load coverage"
  loadingMessage="Loading coverage"
  loadingPlaceholderHeight={220}
  operationName="MitochondrialCoverageInRegion"
  query="
query MitochondrialCoverageInRegion($start: Int!, $stop: Int!, $datasetId: DatasetId!, $referenceGenome: ReferenceGenomeId!) {
  region(chrom: "M", start: $start, stop: $stop, reference_genome: $referenceGenome) {
    mitochondrial_coverage(dataset: $datasetId) {
      pos
      mean
      median
      over_100
      over_1000
    }
  }
}
"
  success={[Function]}
  variables={
    {
      "datasetId": "gnomad_r3",
      "referenceGenome": "GRCh38",
      "start": 123,
      "stop": 456,
    }
  }
>
  [Function]
</mockConstructor>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_r3_controls_and_biobanks queries with appropriate params 1`] = `
<mockConstructor
  errorMessage="Unable to load coverage"
  loadingMessage="Loading coverage"
  loadingPlaceholderHeight={220}
  operationName="MitochondrialCoverageInRegion"
  query="
query MitochondrialCoverageInRegion($start: Int!, $stop: Int!, $datasetId: DatasetId!, $referenceGenome: ReferenceGenomeId!) {
  region(chrom: "M", start: $start, stop: $stop, reference_genome: $referenceGenome) {
    mitochondrial_coverage(dataset: $datasetId) {
      pos
      mean
      median
      over_100
      over_1000
    }
  }
}
"
  success={[Function]}
  variables={
    {
      "datasetId": "gnomad_r3_controls_and_biobanks",
      "referenceGenome": "GRCh38",
      "start": 123,
      "stop": 456,
    }
  }
>
  [Function]
</mockConstructor>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_r3_non_cancer queries with appropriate params 1`] = `
<mockConstructor
  errorMessage="Unable to load coverage"
  loadingMessage="Loading coverage"
  loadingPlaceholderHeight={220}
  operationName="MitochondrialCoverageInRegion"
  query="
query MitochondrialCoverageInRegion($start: Int!, $stop: Int!, $datasetId: DatasetId!, $referenceGenome: ReferenceGenomeId!) {
  region(chrom: "M", start: $start, stop: $stop, reference_genome: $referenceGenome) {
    mitochondrial_coverage(dataset: $datasetId) {
      pos
      mean
      median
      over_100
      over_1000
    }
  }
}
"
  success={[Function]}
  variables={
    {
      "datasetId": "gnomad_r3_non_cancer",
      "referenceGenome": "GRCh38",
      "start": 123,
      "stop": 456,
    }
  }
>
  [Function]
</mockConstructor>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_r3_non_neuro queries with appropriate params 1`] = `
<mockConstructor
  errorMessage="Unable to load coverage"
  loadingMessage="Loading coverage"
  loadingPlaceholderHeight={220}
  operationName="MitochondrialCoverageInRegion"
  query="
query MitochondrialCoverageInRegion($start: Int!, $stop: Int!, $datasetId: DatasetId!, $referenceGenome: ReferenceGenomeId!) {
  region(chrom: "M", start: $start, stop: $stop, reference_genome: $referenceGenome) {
    mitochondrial_coverage(dataset: $datasetId) {
      pos
      mean
      median
      over_100
      over_1000
    }
  }
}
"
  success={[Function]}
  variables={
    {
      "datasetId": "gnomad_r3_non_neuro",
      "referenceGenome": "GRCh38",
      "start": 123,
      "stop": 456,
    }
  }
>
  [Function]
</mockConstructor>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_r3_non_topmed queries with appropriate params 1`] = `
<mockConstructor
  errorMessage="Unable to load coverage"
  loadingMessage="Loading coverage"
  loadingPlaceholderHeight={220}
  operationName="MitochondrialCoverageInRegion"
  query="
query MitochondrialCoverageInRegion($start: Int!, $stop: Int!, $datasetId: DatasetId!, $referenceGenome: ReferenceGenomeId!) {
  region(chrom: "M", start: $start, stop: $stop, reference_genome: $referenceGenome) {
    mitochondrial_coverage(dataset: $datasetId) {
      pos
      mean
      median
      over_100
      over_1000
    }
  }
}
"
  success={[Function]}
  variables={
    {
      "datasetId": "gnomad_r3_non_topmed",
      "referenceGenome": "GRCh38",
      "start": 123,
      "stop": 456,
    }
  }
>
  [Function]
</mockConstructor>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_r3_non_v2 queries with appropriate params 1`] = `
<mockConstructor
  errorMessage="Unable to load coverage"
  loadingMessage="Loading coverage"
  loadingPlaceholderHeight={220}
  operationName="MitochondrialCoverageInRegion"
  query="
query MitochondrialCoverageInRegion($start: Int!, $stop: Int!, $datasetId: DatasetId!, $referenceGenome: ReferenceGenomeId!) {
  region(chrom: "M", start: $start, stop: $stop, reference_genome: $referenceGenome) {
    mitochondrial_coverage(dataset: $datasetId) {
      pos
      mean
      median
      over_100
      over_1000
    }
  }
}
"
  success={[Function]}
  variables={
    {
      "datasetId": "gnomad_r3_non_v2",
      "referenceGenome": "GRCh38",
      "start": 123,
      "stop": 456,
    }
  }
>
  [Function]
</mockConstructor>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_sv_r2_1 queries with appropriate params 1`] = `
<mockConstructor
  errorMessage="Unable to load coverage"
  loadingMessage="Loading coverage"
  loadingPlaceholderHeight={220}
  operationName="MitochondrialCoverageInRegion"
  query="
query MitochondrialCoverageInRegion($start: Int!, $stop: Int!, $datasetId: DatasetId!, $referenceGenome: ReferenceGenomeId!) {
  region(chrom: "M", start: $start, stop: $stop, reference_genome: $referenceGenome) {
    mitochondrial_coverage(dataset: $datasetId) {
      pos
      mean
      median
      over_100
      over_1000
    }
  }
}
"
  success={[Function]}
  variables={
    {
      "datasetId": "gnomad_sv_r2_1",
      "referenceGenome": "GRCh37",
      "start": 123,
      "stop": 456,
    }
  }
>
  [Function]
</mockConstructor>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_sv_r2_1_controls queries with appropriate params 1`] = `
<mockConstructor
  errorMessage="Unable to load coverage"
  loadingMessage="Loading coverage"
  loadingPlaceholderHeight={220}
  operationName="MitochondrialCoverageInRegion"
  query="
query MitochondrialCoverageInRegion($start: Int!, $stop: Int!, $datasetId: DatasetId!, $referenceGenome: ReferenceGenomeId!) {
  region(chrom: "M", start: $start, stop: $stop, reference_genome: $referenceGenome) {
    mitochondrial_coverage(dataset: $datasetId) {
      pos
      mean
      median
      over_100
      over_1000
    }
  }
}
"
  success={[Function]}
  variables={
    {
      "datasetId": "gnomad_sv_r2_1_controls",
      "referenceGenome": "GRCh37",
      "start": 123,
      "stop": 456,
    }
  }
>
  [Function]
</mockConstructor>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_sv_r2_1_non_neuro queries with appropriate params 1`] = `
<mockConstructor
  errorMessage="Unable to load coverage"
  loadingMessage="Loading coverage"
  loadingPlaceholderHeight={220}
  operationName="MitochondrialCoverageInRegion"
  query="
query MitochondrialCoverageInRegion($start: Int!, $stop: Int!, $datasetId: DatasetId!, $referenceGenome: ReferenceGenomeId!) {
  region(chrom: "M", start: $start, stop: $stop, reference_genome: $referenceGenome) {
    mitochondrial_coverage(dataset: $datasetId) {
      pos
      mean
      median
      over_100
      over_1000
    }
  }
}
"
  success={[Function]}
  variables={
    {
      "datasetId": "gnomad_sv_r2_1_non_neuro",
      "referenceGenome": "GRCh37",
      "start": 123,
      "stop": 456,
    }
  }
>
  [Function]
</mockConstructor>
`;

exports[`MitochondrialRegionCoverageTrack with dataset gnomad_sv_r4 queries with appropriate params 1`] = `
<mockConstructor
  errorMessage="Unable to load coverage"
  loadingMessage="Loading coverage"
  loadingPlaceholderHeight={220}
  operationName="MitochondrialCoverageInRegion"
  query="
query MitochondrialCoverageInRegion($start: Int!, $stop: Int!, $datasetId: DatasetId!, $referenceGenome: ReferenceGenomeId!) {
  region(chrom: "M", start: $start, stop: $stop, reference_genome: $referenceGenome) {
    mitochondrial_coverage(dataset: $datasetId) {
      pos
      mean
      median
      over_100
      over_1000
    }
  }
}
"
  success={[Function]}
  variables={
    {
      "datasetId": "gnomad_sv_r4",
      "referenceGenome": "GRCh38",
      "start": 123,
      "stop": 456,
    }
  }
>
  [Function]
</mockConstructor>
`;
